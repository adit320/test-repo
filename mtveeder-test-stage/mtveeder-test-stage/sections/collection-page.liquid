{%- assign image_padding = 'p-8 pb-0' -%}
{% case section.settings.image_size %}
  {% when "full" %}
    {%- assign image_padding = '' -%}
  {% when 'padded' %}
  {%- assign image_padding = 'p-8 pb-0' -%}
{% endcase %}
<div class="section">
  <div class="container-7xl">
    <div class="mb-7 md:mb-12 text-center">
      <h2 class="text-2xl font-semibold">{{section.settings.collection_navigation_header}}</h2>
    </div>
    <div class="flex space-x-2 justify-center mininav">
      {%- assign collection_menu_handle = section.settings.collection_navigation -%}
      {%- assign collection_menu = linklists[collection_menu_handle] -%}
      {% if section.settings.collection_navigation_child_nav != blank %}
        {% for link in collection_menu.links %}
          {% assign child_list_handle = link.title | handleize %}
          {% if child_list_handle == section.settings.collection_navigation_child_nav %}
            {%- assign collection_menu = linklists[child_list_handle] -%}
          {% endif %}
        {% endfor %}
      {% endif %}
      
      {% for link in collection_menu.links %}

        {% assign child_list_handle = link.title | handleize %}
        {% if link.links != empty %}
          <div @mouseover.away.debounce.075ms="open = false; clicked = false;" class="relative {% if forloop.index > 3 %} lg:hidden xl:block {% endif %}" 
            x-data="{ open: false, clicked: false }">
            <a href={{link.url}}  @click="if(window.isTouchDevice() && !clicked ) { $event.preventDefault(); clicked = true;};" @mouseover="open = true" class="button-secondary parent-link">
              {{ link.title }}
            </a>
            <div 
              style="display: none;"
              x-show="open"
              x-transition:enter="transition ease-out duration-100" 
              x-transition:enter-start="transform opacity-0 scale-95" 
              x-transition:enter-end="transform opacity-100 scale-100" 
              x-transition:leave="transition ease-in duration-75" 
              x-transition:leave-start="transform opacity-100 scale-100" 
              x-transition:leave-end="transform opacity-0 scale-95" 
              class="absolute left-0 w-28 sm:w-full  origin-top-right rounded-md shadow-lg z-30">
              <div class="px-4 py-4 navbar-dropdown shadow-xl ">
                <div class="space-y-2">
                  <a href={{link.url}} class="navbar-dropdown-link text-sm block">
                    All {{ link.title }}s
                  </a>
                  {% for childlink in link.links %}
                    <a href="{{ childlink.url }}" class="navbar-dropdown-link text-sm block">{{ childlink.title | escape }}</a>
                  {% endfor %}
                </div>
              </div>
            </div>
          </div>
        {% else %}
          <a class="button-secondary" href="{{ link.url }}">{{ link.title }}</a>
        {% endif %}
      {% endfor %}
    </div>
    <!-- keeping this accordion navigation for mobile for alternative layout -->
    {%- comment -%}
   
    <div class="hidden">
      {% for link in collection_menu.links %}
      {% assign child_list_handle = link.title | handleize %}
      {% if linklists[child_list_handle].links != empty %}
        <div @click.away="open = false" class="relative" x-data="{ open: false }">
          <button @click="open = !open" class="mx-auto w-full sidebar-button flex flex-row items-center justify-center">
              <span>{{ link.title }}</span>
              {% if section.settings.show_dropdown_arrows %}
                <svg fill="currentColor" viewBox="0 0 20 20" :class="{'rotate-180': open, 'rotate-0': !open}" class="inline w-4 h-4 ml-1 transition-transform duration-200 transform rotate-180"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>                      
              {% endif %}
          </button>
          <!-- Check if menu has grandchildren -->
          {% assign has_grandchildren = false %}
          {% for childlink in linklists[child_list_handle].links %}
            {% assign grandchild_list_handle = childlink.title | handleize %}
            {% if linklists[grandchild_list_handle].links != empty %}
              {% assign has_grandchildren = true %}
            {% endif %}
          {% endfor %}
          
         
          <div class="relative overflow-hidden transition-all max-h-0 duration-500" 
            x-ref="container{{forloop.index}}" 
            x-bind:style="open ? 'max-height: ' + $refs.container{{forloop.index}}.scrollHeight + 'px' : ''">
            <div class="px-2 py-2 ">
              <div class="space-y-2 text-center">
                {% for childlink in linklists[child_list_handle].links %}
                  <a href="{{ childlink.url }}" class="navbar-dropdown-link text-sm block">{{ childlink.title | escape }}</a>
                {% endfor %}
              </div>
            </div>
          </div>
        </div>
      {% else %}
        <a class="sidebar-button {% if link.active%} font-bold {% endif %}" href="{{ link.url }}">{{ link.title }}</a>
      {% endif %}
    {% endfor %}
    </div>
     {%- endcomment -%}
  </div>
</div>
<div class="section" style="background-color: {{section.settings.background_color }};">
  {% paginate collection.products by section.settings.paginate_per %}

  <div class="container-7xl ">
      <div class="mb-7 md:mb-12 text-center">
        <h2 class="text-2xl font-semibold">{{ collection.title | escape }}</h2>
      </div>

    <div class="flex flex-wrap justify-center -ml-4 lg:-ml-6 -mb4">
      {%- assign grid_item_width = 'w-full md:w-1/2 lg:w-1/3' -%}
      {% case section.settings.paginate_per %}
        {% when 1 %}
          {%- assign grid_item_width = 'w-full md:w-1/2 lg:w-1/3' -%}
        {% when 2 %}
          {%- assign grid_item_width = 'w-full md:w-1/2 lg:w-1/3' -%}
        {% when 3 %}
          {%- assign grid_item_width = 'w-full md:w-1/2 lg:w-1/3' -%}
        {% when 4 %}
          {%- assign grid_item_width = 'w-full sm:w-1/2 xl:w-1/4' -%}
      {% endcase %}
     {% for product in collection.products %}
        {% if section.settings.paginate_per == 5 and forloop.index < 3 %}
          {%- assign column_width = 'w-full sm:w-1/2 ' -%}
        {% else %}
          {%- assign column_width = grid_item_width -%}
        {% endif %}
        {% render 'product-card',
          max_image_width: section.settings.image_width,
          column_width: column_width,
          card_bg: section.settings.card_bg,
          id: block.id,
          product: product,
          enable_image: true,
        %}
      {% endfor %}
    </div>
    {%- if section.settings.button_label != blank and section.settings.button_link != blank -%}
      <div class="my-6 text-center">
        <a href="{{ section.settings.button_link }}"  class="button-default" >
          {{- section.settings.button_label | escape -}}
        </a>
      </div>
    {%- endif -%}
  </div>
  <div class="w-full text-center">
    {% if paginate.pages > 1 %}
      {{ paginate | default_pagination }}
    {% endif %}
    {% endpaginate %}
  </div>
</div>
<style>
  #shopify-section-collection-page .page {
    padding-left: 0.5rem;
    padding-right: 0.5rem;
  }
</style>


{% schema %}
{
  "name": "Product collection",
  "settings": [
    {
      "type": "color",
      "id": "background_color",
      "label": "Background Color",
      "default": "#fff"
    },
    {
      "type": "color",
      "id": "card_bg",
      "label": "Card background color",
      "default": "#fff"
    },
    {
        "type": "range",
        "id": "paginate_per",
        "label": "Products per page",
        "min": 1,
        "max": 48,
        "default": 12
    },
    {
      "type": "text",
      "id": "collection_navigation_header",
      "label": "Collection navigation header",
      "default": "Search by:"
    },
    {
      "type": "link_list",
      "id": "collection_navigation",
      "label": "Collection navigation"
    },
    {
      "type": "text",
      "id": "collection_navigation_child_nav",
      "label": "Child navigation name",
      "info": "A second tier of the primary navigation"
    }
  ]
}
{% endschema %}
